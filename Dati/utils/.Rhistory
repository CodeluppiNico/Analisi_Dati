library(ggplot2)
library(ggmap)
library(rgdal)
library(sp)
library(maptools)
library(leaflet)
## Create a SHP file
hdr = readLines("Nrealtime_Emilia-Romagna_15_20170816_0845.hdr")
hdr = strsplit(hdr,split=" ",fixed = TRUE)
hdr = as.data.frame(hdr,stringsAsFactors = FALSE)
names(hdr) = hdr[1,]
hdr = hdr[2,]
ulxmap = as.numeric(hdr$ulxmap)
ulymap = as.numeric(hdr$ulymap)
xdim = as.numeric(hdr$xdim)
ydim = as.numeric(hdr$ydim)
#cities = read.csv("cities.csv",header = FALSE)
#names(cities) = c("city","ll.lon","ll.lat","ur.lon","ur.lat")
#bbox = cities[cities$city=="Modena",2:5]
#shpFile = "Modena.shp"
#bbox = data.frame(10.886880,44.617892,10.953896,44.657667)
shpFile = "BLQ.shp"
bbox = data.frame(11.281752,44.520770,11.309602, 44.536488)
names(bbox) = c("ll.lon","ll.lat","ur.lon","ur.lat")
minj = floor((bbox$ll.lon - ulxmap + xdim/2)/xdim)
maxi = ceiling((ulymap - bbox$ll.lat + ydim/2)/ydim)
maxj = ceiling((bbox$ur.lon - ulxmap + xdim/2)/xdim)
mini = floor((ulymap - bbox$ur.lat + ydim/2)/ydim)
nrows = maxi - mini
ncols = maxj - minj
ox = ulxmap + (minj * xdim)
oy = ulymap - (mini * ydim)
getCellBorder = function(i,j,ox,oy,xdim,ydim) {
# bottom left corner
x = ox + (j * xdim) - xdim/2
y = oy - (i * ydim) - ydim/2
m = matrix(c(x,y,
x+xdim,y,
x+xdim,y+ydim,
x,y+ydim),
nrow=4,ncol=2,byrow=TRUE)
return(Polygons(list(Polygon(m)),ID=paste((mini+i),(minj+j),sep="-")))
#return(data.frame(id=paste((mini+i),(minj+j),sep="-"),lon=m[,1],lat=m[,2],stringsAsFactors = F))
}
tot = nrows * ncols
z = vector("list",tot)
ii = 1
for(i in 1:nrows) {
for(j in 1:ncols) {
z[ii] = getCellBorder(i,j,ox,oy,xdim,ydim)
ii = ii+1
}
print(i)
}
rnames = lapply(z,function(zi){print(zi@ID)})
z = SpatialPolygons(z)
attr <- data.frame(val=rep(0,length(z)))
rownames(attr) = rnames
z = SpatialPolygonsDataFrame(z,attr,match.ID = TRUE)
proj4string(z) = CRS("+init=epsg:4326")
writePolyShape(z,shpFile)
z <- readShapePoly(shpFile,IDvar="SP_ID")
leaflet(z) %>%
addPolygons(stroke = TRUE, color = "#000", weight=1, fillOpacity = 0.5, fillColor = "#03F", smoothFactor = 0.5) %>%
addTiles() #adds a map tile, the default is OpenStreetMap
